function FileData_Pairs(x)
{
x.t("na_server_invoke_elem","input");
x.t("na_server_invoke_elem","failed");
x.t("na_server_invoke_elem","return");
x.t("na_server_invoke_elem","successful");
x.t("na_results_status","na_elem_t");
x.t("na_results_status","prototype");
x.t("description","input");
x.t("description","syntax");
x.t("description","elt");
x.t("description","gets");
x.t("topic","helpful");
x.t("topic","core");
x.t("na_ok","success");
x.t("type","description");
x.t("unknown","api");
x.t("apis","topic");
x.t("apis","status");
x.t("apis","netapp");
x.t("apis","core");
x.t("apis","used");
x.t("apis","including");
x.t("details","case");
x.t("element","returned");
x.t("element","return");
x.t("na_failed","input");
x.t("na_failed","failure");
x.t("status","api");
x.t("status","request");
x.t("invoked","either");
x.t("na_server_invoke","na_server_invoke_elem");
x.t("guide","sdk");
x.t("api","invoked");
x.t("api","requested");
x.t("api","invocation");
x.t("api","used");
x.t("requested","server");
x.t("na_results_reason","na_elem_t");
x.t("na_results_reason","prototype");
x.t("char","na_results_reason");
x.t("const","char");
x.t("netapp","2017");
x.t("netapp","manageability");
x.t("helpful","send");
x.t("determine","error");
x.t("find","reason");
x.t("sdk","olh");
x.t("sdk","core");
x.t("olh","master");
x.t("string","api");
x.t("string","parent");
x.t("string","failure");
x.t("string","containing");
x.t("int","na_results_status");
x.t("int","na_results_errno");
x.t("input","description");
x.t("input","type");
x.t("input","input");
x.t("input","types");
x.t("input","return");
x.t("input","output");
x.t("request","apis");
x.t("request","failure");
x.t("failed","unknown");
x.t("failed","api");
x.t("failed","na_results_reason");
x.t("failed","error");
x.t("error","details");
x.t("error","status");
x.t("error","string");
x.t("error","number");
x.t("syntax","input");
x.t("reason","error");
x.t("reason","failure");
x.t("number","status");
x.t("number","api");
x.t("number","string");
x.t("number","failure");
x.t("retrieve","status");
x.t("parent","topic");
x.t("comments","netapp");
x.t("types","input");
x.t("returned","either");
x.t("2017","netapp");
x.t("master","programming");
x.t("return","value");
x.t("return","values");
x.t("manageability","sdk");
x.t("null","api");
x.t("failure","api");
x.t("failure","string");
x.t("failure","na_results_errno");
x.t("failure","page");
x.t("na_elem_t","elt");
x.t("na_elem_t","pointer");
x.t("core","apis");
x.t("elt","description");
x.t("elt","na_elem_t");
x.t("value","na_ok");
x.t("value","api");
x.t("value","null");
x.t("na_results_errno","na_elem_t");
x.t("na_results_errno","prototype");
x.t("prototype","const");
x.t("prototype","int");
x.t("invocation","na_failed");
x.t("invocation","failed");
x.t("invocation","using");
x.t("send","comments");
x.t("programming","guide");
x.t("page","contains");
x.t("output","element");
x.t("information","status");
x.t("result","status");
x.t("case","request");
x.t("values","na_results_status");
x.t("successful","error");
x.t("used","determine");
x.t("used","find");
x.t("used","retrieve");
x.t("either","na_server_invoke");
x.t("pointer","input");
x.t("containing","error");
x.t("using","either");
x.t("including","description");
x.t("success","na_failed");
x.t("server","error");
x.t("contains","information");
x.t("gets","error");
x.t("gets","reason");
x.t("gets","result");
}
