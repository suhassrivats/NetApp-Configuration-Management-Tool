function FileData_Pairs(x)
{
x.t("multistore","management");
x.t("hello_dfm.py","hello_dfm.rb");
x.t("protection_policy.py","protection_policy.rb");
x.t("provide","counters");
x.t("provide","health");
x.t("available","space");
x.t("method","generate");
x.t("day-hour","format");
x.t("managing","provisioning");
x.t("hello_dfm.java","hello_dfm.c");
x.t("proxy","sample");
x.t("proxy","netapp");
x.t("protection_policy.java","protection_policy.cs");
x.t("protected","unprotected");
x.t("files","check");
x.t("counters","aggregate");
x.t("table","describes");
x.t("describes","sample");
x.t("description","sample");
x.t("create","delete");
x.t("create","list");
x.t("create","destroy");
x.t("dataset.pl","dataset.java");
x.t("dataset.rb","multistore");
x.t("dataset.rb","datafabric");
x.t("few","datafabric");
x.t("(views)","latency");
x.t("perf_aggr_latency.py","perf_aggr_latency.rb");
x.t("topic","sample");
x.t("topic","helpful");
x.t("unified","manager");
x.t("schedules","dfm_schedule.pl");
x.t("nas_provisioning_policy.pl","nas_provisioning_policy.java");
x.t("nas_provisioning_policy.rb","protection");
x.t("collects","cpu");
x.t("sample","codes");
x.t("sample","code");
x.t("vfiler.pl","vfiler.java");
x.t("vfiler.rb","role-based");
x.t("perfvollatency.java","perf_vol_latency.py");
x.t("dfm_proxy.py","dfm_proxy.rb");
x.t("delete","new");
x.t("delete","list");
x.t("delete","resource");
x.t("delete","members");
x.t("delete","provision");
x.t("delete","vfiler");
x.t("delete","dataset");
x.t("delete","protection");
x.t("delete","member");
x.t("delete","datafabric");
x.t("policy.py","policy.rb");
x.t("time","stamp");
x.t("perfcpuutil.java","perfcpuutil.py");
x.t("total","protected");
x.t("total","space");
x.t("dataset_metrics.java","performance");
x.t("apis","oncommand");
x.t("invoking","simple");
x.t("bindings","hello");
x.t("access","control");
x.t("advanced","sample");
x.t("new","provisioning");
x.t("dataset_metrics.pl","dataset_metrics.java");
x.t("dfm_schedule.cs","dfm_schedule.py");
x.t("nas_provisioning_policy.java","nas_provisioning_policy.cs");
x.t("resource_pool.pl","multistore");
x.t("resource_pool.pl","resource_pool.java");
x.t("resource_pool.rb","resource_pool.pl");
x.t("resource_pool.rb","dataset");
x.t("savings","dataset");
x.t("file","sample");
x.t("list","delete");
x.t("list","remove");
x.t("list","members");
x.t("list","datasets");
x.t("list","protection");
x.t("list","nas");
x.t("list","roles");
x.t("policies","create");
x.t("policies","nas_provisioning_policy.pl");
x.t("policies","protection_policy.pl");
x.t("status","resource");
x.t("status","conformance");
x.t("status","space");
x.t("status","dataset_health.pl");
x.t("status","datasets");
x.t("cpu","utilization");
x.t("advisor","provide");
x.t("perfdisklatency.java","perfdisklatency.py");
x.t("dataset.py","dataset.rb");
x.t("add","list");
x.t("stamp","perf_disk_iops_latency.pl");
x.t("check","src/sample/");
x.t("api","bindings");
x.t("api","retrieve");
x.t("simple","datafabric");
x.t("simple","ontap");
x.t("dataset.java","dataset.py");
x.t("dataset.java","dataset.cs");
x.t("remove","members");
x.t("health","status");
x.t("health","monitoring");
x.t("perf_disk_iops_latency.pl","perfdisklatency.java");
x.t("units","create");
x.t("graphical","format");
x.t("perf_cpu_util.pl","perfcpuutil.java");
x.t("pooling","management");
x.t("rbac.cs","rbac.py");
x.t("directly","sample");
x.t("creating","managing");
x.t("name","description");
x.t("demonstrates","provide");
x.t("demonstrates","method");
x.t("demonstrates","create");
x.t("demonstrates","list");
x.t("demonstrates","add");
x.t("demonstrates","obtain");
x.t("demonstrates","following");
x.t("demonstrates","manage");
x.t("demonstrates","datafabric");
x.t("infrastructure","create");
x.t("obtain","storage");
x.t("codes","topic");
x.t("codes","netapp");
x.t("codes","perl");
x.t("codes","oncommand");
x.t("codes","demonstrate");
x.t("codes","datafabric");
x.t("nas_provisioning_policy.py","nas_provisioning_policy.rb");
x.t("performance","advisor");
x.t("performance","characteristics");
x.t("enables","comparison");
x.t("vfiler.py","vfiler.rb");
x.t("aggregate","performance");
x.t("aggregate","present");
x.t("aggregate","latency");
x.t("aggregate","data");
x.t("average","latency");
x.t("comparison","cpu");
x.t("netapp","2017");
x.t("netapp","manageability");
x.t("netapp","storage");
x.t("provides","information");
x.t("helpful","send");
x.t("network-attached","storage");
x.t("sdk","olh");
x.t("protection_policy.cs","protection_policy.py");
x.t("destroy","vfiler");
x.t("multistore.pl","multistore.java");
x.t("multistore.rb","provisioning");
x.t("olh","master");
x.t("hello_dfm.c","hello_dfm.py");
x.t("write","latency");
x.t("src/sample/","file");
x.t("resource","status");
x.t("resource","pooling");
x.t("resource","pools");
x.t("resource","pool");
x.t("resource_pool.py","resource_pool.rb");
x.t("input","output");
x.t("second","cpu");
x.t("second","(iops)");
x.t("prints","cpu");
x.t("prints","average");
x.t("prints","disk");
x.t("prints","minimum");
x.t("prints","data");
x.t("functions","connecting");
x.t("dfm_proxy.c","dfm_proxy.py");
x.t("present","sample");
x.t("present","aggregate");
x.t("charts","represent");
x.t("excel","sheet");
x.t("python","ruby");
x.t("collect","information");
x.t("members","dataset.pl");
x.t("members","delete");
x.t("members","resource");
x.t("(nas)","provisioning");
x.t("conformance","status");
x.t("volumes","present");
x.t("disk","input");
x.t("disk","iops");
x.t("disk","latency");
x.t("iops","value");
x.t("connecting","datafabric");
x.t("unit","multistore.pl");
x.t("space","available");
x.t("space","total");
x.t("space","savings");
x.t("space","status");
x.t("space","node");
x.t("space","breakout");
x.t("space","monitoring");
x.t("minimum","disk");
x.t("powershell","python");
x.t("control","(rbac)");
x.t("dataset_health.pl","dataset_health.java");
x.t("dataset_health.rb","space");
x.t("retrieve","information");
x.t("retrieve","result");
x.t("chart","average");
x.t("chart","generate");
x.t("maximum","disk");
x.t("parent","topic");
x.t("comments","netapp");
x.t("templates","vfiler.pl");
x.t("rbac","infrastructure");
x.t("characteristics","(views)");
x.t("resource_pool.java","resource_pool.py");
x.t("resource_pool.java","resource_pool.cs");
x.t("(rbac)","using");
x.t("format","enables");
x.t("format","generate");
x.t("format","weeks");
x.t("perfcpuutil.rb","parent");
x.t("node","dataset");
x.t("perf_vol_latency.pl","perfvollatency.java");
x.t("perf_vol_latency.rb","disk");
x.t("2017","netapp");
x.t("code","collects");
x.t("code","name");
x.t("code","demonstrates");
x.t("code","provides");
x.t("code","prints");
x.t("code","excel");
x.t("code","languages");
x.t("code","used");
x.t("languages","perl");
x.t("multistore.py","multistore.rb");
x.t("dataset_health.java","dataset_health.py");
x.t("master","sample");
x.t("vfiler.java","vfiler.cs");
x.t("provision","dataset");
x.t("provision","storage");
x.t("dfm_schedule.pl","dfm_schedule.java");
x.t("dfm_schedule.rb","network-attached");
x.t("pools","add");
x.t("pools","provisioning");
x.t("breakout","deduplicated");
x.t("java","python");
x.t("java","powershell");
x.t("dataset.cs","dataset.py");
x.t("manageability","sdk");
x.t("rbac.java","rbac.cs");
x.t("latency","sample");
x.t("latency","directly");
x.t("latency","average");
x.t("latency","aggregate");
x.t("latency","write");
x.t("latency","input");
x.t("latency","volumes");
x.t("latency","data");
x.t("latency","volume");
x.t("(iops)","disks");
x.t("core","package");
x.t("datasets","demonstrates");
x.t("datasets","dataset");
x.t("datasets","system");
x.t("value","maximum");
x.t("value","specific");
x.t("rbac.pl","rbac.java");
x.t("rbac.rb","following");
x.t("dataset_health.py","dataset_health.rb");
x.t("redirect","output");
x.t("disks","aggregate");
x.t("specific","time");
x.t("send","comments");
x.t("manager","proxy");
x.t("manager","schedules");
x.t("manager","sample");
x.t("manager","apis");
x.t("manager","core");
x.t("manager","schedule");
x.t("manager","package");
x.t("manager","scheduling");
x.t("manager","server");
x.t("dfm_schedule.java","dfm_schedule.cs");
x.t("nas_provisioning_policy.cs","nas_provisioning_policy.py");
x.t("generate","aggregate");
x.t("generate","charts");
x.t("generate","chart");
x.t("generate","distribution");
x.t("generate","graph");
x.t("hello","datafabric");
x.t("vfiler","units");
x.t("vfiler","unit");
x.t("vfiler","templates");
x.t("vfiler","dataset");
x.t("vfiler.cs","vfiler.py");
x.t("read","latency");
x.t("represent","data");
x.t("distribution","chart");
x.t("schedule","management");
x.t("output","sample");
x.t("output","data");
x.t("output","per");
x.t("output","operations");
x.t("information","total");
x.t("information","space");
x.t("information","read");
x.t("information","dataset");
x.t("information","datafabric");
x.t("dataset","dataset.pl");
x.t("dataset","demonstrates");
x.t("dataset","provides");
x.t("dataset","members");
x.t("dataset","provision");
x.t("dataset","monitoring");
x.t("dataset","protection");
x.t("dataset","management");
x.t("dataset","used");
x.t("dataset","member");
x.t("dataset","attach");
x.t("monitoring","sample");
x.t("monitoring","health");
x.t("data","sample");
x.t("data","graphical");
x.t("data","format");
x.t("data","collecting");
x.t("data","two");
x.t("data","used");
x.t("graph","redirect");
x.t("perfaggrlatency.java","perf_aggr_latency.py");
x.t("perfdisklatency.rb","cpu");
x.t("perfcpuutil.py","perfcpuutil.rb");
x.t("provisioning","policies");
x.t("provisioning","protection");
x.t("provisioning","policy");
x.t("protection","policies");
x.t("protection","status");
x.t("protection","dataset");
x.t("protection","policy");
x.t("perl","api");
x.t("perl","java");
x.t("result","hello_dfm.pl");
x.t("result","dfm_proxy.pl");
x.t("perf_vol_latency.py","perf_vol_latency.rb");
x.t("oncommand","unified");
x.t("policy","vfiler");
x.t("policy","protection");
x.t("policy","following");
x.t("policy","management");
x.t("policy","policy.pl");
x.t("hello_dfm.pl","hello_dfm.java");
x.t("hello_dfm.pl","datafabric");
x.t("hello_dfm.rb","hello_dfm.pl");
x.t("protection_policy.pl","protection_policy.java");
x.t("protection_policy.rb","resource");
x.t("case","name");
x.t("deduplicated","space");
x.t("collecting","latency");
x.t("resource_pool.cs","resource_pool.py");
x.t("unprotected","datasets");
x.t("sheet","perf_cpu_util.pl");
x.t("sheet","perf_vol_latency.pl");
x.t("sheet","perf_aggr_latency.pl");
x.t("dfm_schedule.py","dfm_schedule.rb");
x.t("nas","provisioning");
x.t("two","weeks");
x.t("package","retrieve");
x.t("package","extract");
x.t("multistore.java","multistore.py");
x.t("utilization","day-hour");
x.t("utilization","sample");
x.t("utilization","aggregate");
x.t("utilization","data");
x.t("utilization","statistics");
x.t("management","sample");
x.t("management","creating");
x.t("management","datafabric");
x.t("following","table");
x.t("following","advanced");
x.t("following","functions");
x.t("storage","(nas)");
x.t("storage","dataset");
x.t("storage","information");
x.t("storage","system");
x.t("system","sample");
x.t("system","collect");
x.t("system","code");
x.t("manage","rbac");
x.t("used","space");
x.t("used","generate");
x.t("demonstrate","few");
x.t("ruby","perl");
x.t("ruby","case");
x.t("ruby","policy-based");
x.t("scheduling","management");
x.t("role-based","access");
x.t("using","datafabric");
x.t("perf_aggr_latency.pl","perfaggrlatency.java");
x.t("perf_aggr_latency.rb","volume");
x.t("rbac.py","rbac.rb");
x.t("per","second");
x.t("statistics","storage");
x.t("dfm_proxy.java","dfm_proxy.c");
x.t("operations","rbac.pl");
x.t("operations","per");
x.t("policy-based","provisioning");
x.t("member","dataset_metrics.pl");
x.t("member","dataset");
x.t("policy.java","policy.py");
x.t("volume","latency");
x.t("volume","generate");
x.t("datafabric","manager");
x.t(".zip","files");
x.t("roles","operations");
x.t("attach","resource");
x.t("ontap","api");
x.t("dfm_proxy.pl","dfm_proxy.java");
x.t("dfm_proxy.rb","dataset");
x.t("pool","resource_pool.pl");
x.t("pool","add");
x.t("policy.pl","policy.java");
x.t("policy.rb","resource");
x.t("server","proxy");
x.t("server","invoking");
x.t("server","api");
x.t("server","dataset");
x.t("extract",".zip");
x.t("perfdisklatency.py","perfdisklatency.rb");
x.t("weeks","prints");
x.t("weeks","output");
}
