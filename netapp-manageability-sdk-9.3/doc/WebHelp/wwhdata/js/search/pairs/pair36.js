function FileData_Pairs(x)
{
x.t("create","free");
x.t("description","name");
x.t("description","frees");
x.t("description","input");
x.t("description","initializes");
x.t("description","errbuff");
x.t("description","ptr");
x.t("description","elt");
x.t("description","prototype");
x.t("description","errbuffsize");
x.t("description","allocates");
x.t("void","na_elem_free");
x.t("void","address");
x.t("void","ptr");
x.t("void","na_free");
x.t("void","na_shutdown");
x.t("na_elem_new","const");
x.t("na_elem_new","prototype");
x.t("na_elem_free","na_elem_t");
x.t("na_elem_free","prototype");
x.t("topic","helpful");
x.t("topic","core");
x.t("program","create");
x.t("program","elements");
x.t("type","description");
x.t("freed","return");
x.t("apis","topic");
x.t("apis","na_child_get_string_encrypted");
x.t("apis","netapp");
x.t("apis","core");
x.t("apis","startup");
x.t("apis","used");
x.t("apis","including");
x.t("invoking","api");
x.t("new","element");
x.t("element","input");
x.t("element","resource");
x.t("element","memory");
x.t("element","null");
x.t("element","elt");
x.t("(void)","description");
x.t("(false)","failure");
x.t("na_child_get_string_encrypted","input");
x.t("guide","sdk");
x.t("api","input");
x.t("api","free");
x.t("(true)","success");
x.t("name","description");
x.t("name","element");
x.t("name","const");
x.t("initialize","free");
x.t("char","name");
x.t("char","errbuff");
x.t("char","case");
x.t("const","void");
x.t("const","char");
x.t("netapp","2017");
x.t("netapp","manageability");
x.t("none","na_elem_new");
x.t("none","parent");
x.t("none","na_free");
x.t("helpful","send");
x.t("frees","memory");
x.t("frees","system");
x.t("frees","resources");
x.t("sdk","olh");
x.t("sdk","core");
x.t("address","memory");
x.t("olh","master");
x.t("int","length");
x.t("int","na_startup");
x.t("int","errbuffsize");
x.t("input","description");
x.t("input","type");
x.t("input","input");
x.t("input","types");
x.t("input","return");
x.t("input","output");
x.t("resource","new");
x.t("resource","allocated");
x.t("error","message");
x.t("initializes","global");
x.t("written","buffer");
x.t("function","invoking");
x.t("length","errbuff");
x.t("na_","apis");
x.t("parent","topic");
x.t("comments","netapp");
x.t("errbuff","char");
x.t("errbuff","int");
x.t("errbuff","output");
x.t("types","input");
x.t("allocated","element");
x.t("allocated","na_");
x.t("allocated","return");
x.t("ptr","description");
x.t("ptr","api");
x.t("ptr","const");
x.t("2017","netapp");
x.t("master","programming");
x.t("return","value");
x.t("return","values");
x.t("memory","freed");
x.t("memory","allocated");
x.t("memory","pointed");
x.t("memory","management");
x.t("memory","used");
x.t("message","written");
x.t("manageability","sdk");
x.t("pointed","ptr");
x.t("null","failure");
x.t("failure","na_elem_free");
x.t("failure","na_shutdown");
x.t("na_elem_t","na_elem_new");
x.t("na_elem_t","element");
x.t("na_elem_t","elt");
x.t("core","apis");
x.t("value","(true)");
x.t("value","none");
x.t("value","pointer");
x.t("elt","description");
x.t("elt","input");
x.t("elt","na_elem_t");
x.t("free","memory");
x.t("free","global");
x.t("prototype","void");
x.t("prototype","int");
x.t("prototype","input");
x.t("prototype","na_elem_t");
x.t("send","comments");
x.t("programming","guide");
x.t("na_free","const");
x.t("na_free","prototype");
x.t("page","contains");
x.t("na_startup","char");
x.t("na_startup","prototype");
x.t("output","type");
x.t("output","element");
x.t("information","startup");
x.t("errbuffsize","description");
x.t("errbuffsize","int");
x.t("values","na_startup");
x.t("case","error");
x.t("allocates","resource");
x.t("global","resources");
x.t("startup","memory");
x.t("call","function");
x.t("management","apis");
x.t("used","program");
x.t("used","initialize");
x.t("used","input");
x.t("elements","page");
x.t("system","resources");
x.t("pointer","allocated");
x.t("na_shutdown","(void)");
x.t("na_shutdown","prototype");
x.t("including","description");
x.t("success","(false)");
x.t("buffer","return");
x.t("resources","return");
x.t("resources","call");
x.t("resources","used");
x.t("contains","information");
}
