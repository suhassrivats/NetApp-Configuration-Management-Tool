function FileData_Pairs(x)
{
x.t("interfaces","connection");
x.t("interfaces","exceptions");
x.t("arise","due");
x.t("naprotocolexception","naproxyfailedexception");
x.t("naprotocolexception","class");
x.t("provide","client-side");
x.t("library","contents");
x.t("library","information");
x.t("proxy","servers");
x.t("proxy","api");
x.t("proxy","server");
x.t("create","new");
x.t("responded","something");
x.t("always","strings");
x.t("related","topic");
x.t("topic","library");
x.t("topic","helpful");
x.t("topic","sdk");
x.t("arbitrarily","names");
x.t("interface","naerrno");
x.t("interface","provides");
x.t("naerrno","interface");
x.t("naerrno","naerror");
x.t("errors","naerror");
x.t("errors","arcfour");
x.t("unpack","(unmarshal)");
x.t("responses","create");
x.t("responses","xml");
x.t("change","contents");
x.t("base16","httpclient");
x.t("connection","session");
x.t("connection","server");
x.t("tagged","items");
x.t("identifiable","cases");
x.t("apis","provide");
x.t("apis","topic");
x.t("apis","includes");
x.t("apis","dfmerrno");
x.t("apis","netapp");
x.t("apis","provides");
x.t("apis","parent");
x.t("apis","java");
x.t("apis","exceptions");
x.t("element","nest");
x.t("items","methods");
x.t("new","elements");
x.t("contents","section");
x.t("contents","elements");
x.t("servers","invoke");
x.t("queried","results");
x.t("queried","result");
x.t("failures","methods");
x.t("failures","means");
x.t("includes","following");
x.t("dfmerrno","interface");
x.t("guide","sdk");
x.t("api","interface");
x.t("api","request");
x.t("api","failure");
x.t("api","invocation");
x.t("api","information");
x.t("api","server");
x.t("results","naelement");
x.t("results","values");
x.t("due","wrong");
x.t("due","problems");
x.t("due","protocol");
x.t("credentials","naexception");
x.t("naexception","naprotocolexception");
x.t("naexception","parent");
x.t("browse","apis");
x.t("parse","queried");
x.t("wrong","authentication");
x.t("solve","problem");
x.t("forward","request");
x.t("codes","error");
x.t("resending","request");
x.t("netapp","2017");
x.t("netapp","manageability");
x.t("provides","api");
x.t("provides","methods");
x.t("provides","error");
x.t("provides","following");
x.t("methods","used");
x.t("methods","class");
x.t("methods","server");
x.t("session","parameters");
x.t("parameters","send");
x.t("(i/o)","elements");
x.t("helpful","send");
x.t("determine","queried");
x.t("constants","datafabric");
x.t("constants","ontap");
x.t("naapifailedexception","class");
x.t("naapifailedexception","naauthenticationexception");
x.t("sdk","olh");
x.t("sdk","core");
x.t("strings","upon");
x.t("strings","children");
x.t("olh","master");
x.t("target","host");
x.t("httpresponse","naapifailedexception");
x.t("encapsulates","proxy");
x.t("encapsulates","api");
x.t("encapsulates","input");
x.t("encapsulates","level");
x.t("encapsulates","exception");
x.t("input","output");
x.t("problems","api");
x.t("request","solve");
x.t("request","target");
x.t("request","failed");
x.t("failed","forward");
x.t("error","library");
x.t("error","codes");
x.t("error","strings");
x.t("error","code");
x.t("something","identifiable");
x.t("next","topics");
x.t("means","proxy");
x.t("means","server");
x.t("parent","topic");
x.t("parent","class");
x.t("comments","netapp");
x.t("pack","(marshal)");
x.t("requests","responses");
x.t("xml","format");
x.t("xml","tags");
x.t("format","query");
x.t("returned","serious");
x.t("section","provides");
x.t("section","section");
x.t("nest","i/o");
x.t("2017","netapp");
x.t("code","constants");
x.t("master","programming");
x.t("level","i/o");
x.t("naelement","naerrno");
x.t("naelement","encapsulates");
x.t("naelement","class");
x.t("java","interfaces");
x.t("java","core");
x.t("java","classes");
x.t("upon","api");
x.t("manageability","sdk");
x.t("failure","naauthenticationexception");
x.t("core","apis");
x.t("httprequest","httpresponse");
x.t("send","api");
x.t("send","comments");
x.t("invocation","naprotocolexception");
x.t("invocation","failures");
x.t("programming","guide");
x.t("manager","apis");
x.t("exception","arises");
x.t("authentication","credentials");
x.t("client-side","java");
x.t("output","(i/o)");
x.t("naproxyfailedexception","class");
x.t("naproxyfailedexception","naproxyserver");
x.t("naerror","naexception");
x.t("naerror","class");
x.t("query","api");
x.t("information","next");
x.t("information","java");
x.t("host","errors");
x.t("result","java");
x.t("tags","attributes");
x.t("nested","tagged");
x.t("arises","due");
x.t("received","proxy");
x.t("(unmarshal)","requests");
x.t("values","always");
x.t("children","corresponding");
x.t("problem","means");
x.t("problem","naproxyfailedexception");
x.t("classes","interfaces");
x.t("classes","naserver");
x.t("protocol","problem");
x.t("arcfour","base16");
x.t("topics","browse");
x.t("cases","resending");
x.t("httpclient","httpexception");
x.t("package","requests");
x.t("following","information");
x.t("following","classes");
x.t("elements","arbitrarily");
x.t("elements","change");
x.t("elements","naelement");
x.t("elements","naproxyserver");
x.t("corresponding","xml");
x.t("corresponding","nested");
x.t("used","results");
x.t("used","package");
x.t("used","connect");
x.t("used","extract");
x.t("httpmessage","httprequest");
x.t("class","provides");
x.t("class","encapsulates");
x.t("class","returned");
x.t("class","used");
x.t("class","exceptions");
x.t("connect","proxy");
x.t("naauthenticationexception","naelement");
x.t("naauthenticationexception","class");
x.t("i/o","element");
x.t("i/o","elements");
x.t("names","corresponding");
x.t("naproxyserver","class");
x.t("naproxyserver","naserver");
x.t("invoke","api");
x.t("(marshal)","unpack");
x.t("datafabric","manager");
x.t("naserver","related");
x.t("naserver","class");
x.t("ontap","apis");
x.t("exceptions","arise");
x.t("exceptions","errors");
x.t("exceptions","naapifailedexception");
x.t("serious","error");
x.t("server","responded");
x.t("server","connection");
x.t("server","parse");
x.t("server","determine");
x.t("server","pack");
x.t("server","received");
x.t("attributes","used");
x.t("extract","error");
x.t("httpexception","httpmessage");
}
